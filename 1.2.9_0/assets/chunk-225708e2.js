import{u as X}from"./chunk-47d31085.js";var B={exports:{}};const ee=e=>typeof crypto<"u"&&typeof crypto.getRandomValues=="function"?()=>{const r=crypto.getRandomValues(new Uint8Array(1))[0];return(r>=e?r%e:r).toString(e)}:()=>Math.floor(Math.random()*e).toString(e),q=(e=7,r=!1)=>Array.from({length:e},ee(r?16:36)).join("");B.exports=q;B.exports.default=q;var j=B.exports,ce=()=>`uid::${j(7)}`,J=(e,r=["endpointName","fingerprint"])=>typeof e=="object"&&e!==null&&r.every(t=>t in e),Ae=e=>{if(!J(e))throw new TypeError("Invalid connection args");return JSON.stringify(e)},ue=e=>{try{const r=JSON.parse(e);return J(r)?r:null}catch{return null}},de=()=>{let e=[];return{add:(...r)=>{e=[...e,...r]},remove:r=>{e=typeof r=="string"?e.filter(t=>t.message.transactionId!==r):e.filter(t=>!r.includes(t))},entries:()=>e}},fe=class{static toBackground(e,r){return e.postMessage(r)}static toExtensionContext(e,r){return e.postMessage(r)}},V={exports:{}};(function(e,r){(function(t,u){u(e)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:X,function(t){if(typeof globalThis!="object"||typeof chrome!="object"||!chrome||!chrome.runtime||!chrome.runtime.id)throw new Error("This script should only be loaded in a browser extension.");if(typeof globalThis.browser>"u"||Object.getPrototypeOf(globalThis.browser)!==Object.prototype){const u="The message port closed before a response was received.",x="Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)",b=i=>{const a={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(a).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class m extends WeakMap{constructor(n,g=void 0){super(g),this.createItem=n}get(n){return this.has(n)||this.set(n,this.createItem(n)),super.get(n)}}const p=s=>s&&typeof s=="object"&&typeof s.then=="function",h=(s,n)=>(...g)=>{i.runtime.lastError?s.reject(new Error(i.runtime.lastError.message)):n.singleCallbackArg||g.length<=1&&n.singleCallbackArg!==!1?s.resolve(g[0]):s.resolve(g)},v=s=>s==1?"argument":"arguments",C=(s,n)=>function(l,...d){if(d.length<n.minArgs)throw new Error(`Expected at least ${n.minArgs} ${v(n.minArgs)} for ${s}(), got ${d.length}`);if(d.length>n.maxArgs)throw new Error(`Expected at most ${n.maxArgs} ${v(n.maxArgs)} for ${s}(), got ${d.length}`);return new Promise((w,_)=>{if(n.fallbackToNoCallback)try{l[s](...d,h({resolve:w,reject:_},n))}catch(o){console.warn(`${s} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,o),l[s](...d),n.fallbackToNoCallback=!1,n.noCallback=!0,w()}else n.noCallback?(l[s](...d),w()):l[s](...d,h({resolve:w,reject:_},n))})},f=(s,n,g)=>new Proxy(n,{apply(l,d,w){return g.call(d,s,...w)}});let c=Function.call.bind(Object.prototype.hasOwnProperty);const k=(s,n={},g={})=>{let l=Object.create(null),d={has(_,o){return o in s||o in l},get(_,o,E){if(o in l)return l[o];if(!(o in s))return;let A=s[o];if(typeof A=="function")if(typeof n[o]=="function")A=f(s,s[o],n[o]);else if(c(g,o)){let T=C(o,g[o]);A=f(s,s[o],T)}else A=A.bind(s);else if(typeof A=="object"&&A!==null&&(c(n,o)||c(g,o)))A=k(A,n[o],g[o]);else if(c(g,"*"))A=k(A,n[o],g["*"]);else return Object.defineProperty(l,o,{configurable:!0,enumerable:!0,get(){return s[o]},set(T){s[o]=T}}),A;return l[o]=A,A},set(_,o,E,A){return o in l?l[o]=E:s[o]=E,!0},defineProperty(_,o,E){return Reflect.defineProperty(l,o,E)},deleteProperty(_,o){return Reflect.deleteProperty(l,o)}},w=Object.create(s);return new Proxy(w,d)},y=s=>({addListener(n,g,...l){n.addListener(s.get(g),...l)},hasListener(n,g){return n.hasListener(s.get(g))},removeListener(n,g){n.removeListener(s.get(g))}}),N=new m(s=>typeof s!="function"?s:function(g){const l=k(g,{},{getContent:{minArgs:0,maxArgs:0}});s(l)});let M=!1;const I=new m(s=>typeof s!="function"?s:function(g,l,d){let w=!1,_,o=new Promise(O=>{_=function(S){M||(console.warn(x,new Error().stack),M=!0),w=!0,O(S)}}),E;try{E=s(g,l,_)}catch(O){E=Promise.reject(O)}const A=E!==!0&&p(E);if(E!==!0&&!A&&!w)return!1;const T=O=>{O.then(S=>{d(S)},S=>{let D;S&&(S instanceof Error||typeof S.message=="string")?D=S.message:D="An unexpected error occurred",d({__mozWebExtensionPolyfillReject__:!0,message:D})}).catch(S=>{console.error("Failed to send onMessage rejected reply",S)})};return T(A?E:o),!0}),Y=({reject:s,resolve:n},g)=>{i.runtime.lastError?i.runtime.lastError.message===u?n():s(new Error(i.runtime.lastError.message)):g&&g.__mozWebExtensionPolyfillReject__?s(new Error(g.message)):n(g)},L=(s,n,g,...l)=>{if(l.length<n.minArgs)throw new Error(`Expected at least ${n.minArgs} ${v(n.minArgs)} for ${s}(), got ${l.length}`);if(l.length>n.maxArgs)throw new Error(`Expected at most ${n.maxArgs} ${v(n.maxArgs)} for ${s}(), got ${l.length}`);return new Promise((d,w)=>{const _=Y.bind(null,{resolve:d,reject:w});l.push(_),g.sendMessage(...l)})},Q={devtools:{network:{onRequestFinished:y(N)}},runtime:{onMessage:y(I),onMessageExternal:y(I),sendMessage:L.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:L.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},R={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return a.privacy={network:{"*":R},services:{"*":R},websites:{"*":R}},k(i,Q,a)};t.exports=b(chrome)}else t.exports=globalThis.browser})})(V);var xe=V.exports,re=Object.defineProperty,se=Object.defineProperties,ne=Object.getOwnPropertyDescriptors,W=Object.getOwnPropertySymbols,te=Object.prototype.hasOwnProperty,ae=Object.prototype.propertyIsEnumerable,U=(e,r,t)=>r in e?re(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,z=(e,r)=>{for(var t in r||(r={}))te.call(r,t)&&U(e,t,r[t]);if(W)for(var t of W(r))ae.call(r,t)&&U(e,t,r[t]);return e},G=(e,r)=>se(e,ne(r)),oe=/^((?:background$)|devtools|popup|options|content-script|window)(?:@(\d+)(?:\.(\d+))?)?$/,Z=e=>{const[,r,t,u]=e.match(oe)||[];return{context:r,tabId:+t,frameId:u?+u:void 0}},pe=({context:e,tabId:r,frameId:t})=>["background","popup","options"].includes(e)?e:`${e}@${r}${t?`.${t}`:""}`;const ie=[{property:"name",enumerable:!1},{property:"message",enumerable:!1},{property:"stack",enumerable:!1},{property:"code",enumerable:!0}],F=Symbol(".toJSON was called"),ge=e=>{e[F]=!0;const r=e.toJSON();return delete e[F],r},H=({from:e,seen:r,to_:t,forceEnumerable:u,maxDepth:x,depth:b})=>{const i=t||(Array.isArray(e)?[]:{});if(r.push(e),b>=x)return i;if(typeof e.toJSON=="function"&&e[F]!==!0)return ge(e);for(const[a,m]of Object.entries(e)){if(typeof Buffer=="function"&&Buffer.isBuffer(m)){i[a]="[object Buffer]";continue}if(m!==null&&typeof m=="object"&&typeof m.pipe=="function"){i[a]="[object Stream]";continue}if(typeof m!="function"){if(!m||typeof m!="object"){i[a]=m;continue}if(!r.includes(e[a])){b++,i[a]=H({from:e[a],seen:[...r],forceEnumerable:u,maxDepth:x,depth:b});continue}i[a]="[Circular]"}}for(const{property:a,enumerable:m}of ie)typeof e[a]=="string"&&Object.defineProperty(i,a,{value:e[a],enumerable:u?!0:m,configurable:!0,writable:!0});return i};function me(e,r={}){const{maxDepth:t=Number.POSITIVE_INFINITY}=r;return typeof e=="object"&&e!==null?H({from:e,seen:[],forceEnumerable:!0,maxDepth:t,depth:0}):typeof e=="function"?`[Function: ${e.name||"anonymous"}]`:e}let K=()=>({events:{},emit(e,...r){(this.events[e]||[]).forEach(t=>t(...r))},on(e,r){return(this.events[e]=this.events[e]||[]).push(r),()=>this.events[e]=(this.events[e]||[]).filter(t=>t!==r)}});var be=(e,r,t)=>{const u=j(),x=new Map,b=new Map,i=a=>{if(a.destination.context===e&&!a.destination.frameId&&!a.destination.tabId){t?.(a);const{transactionId:m,messageID:p,messageType:h}=a,v=()=>{const f=x.get(m);if(f){const{err:c,data:k}=a;if(c){const y=c,N=self[y.name],M=new(typeof N=="function"?N:Error)(y.message);for(const I in y)M[I]=y[I];f.reject(M)}else f.resolve(k);x.delete(m)}},C=async()=>{let f,c,k=!1;try{const y=b.get(p);if(typeof y=="function")f=await y({sender:a.origin,id:p,data:a.data,timestamp:a.timestamp});else throw k=!0,new Error(`[webext-bridge] No handler registered in '${e}' to accept messages with id '${p}'`)}catch(y){c=y}finally{if(c&&(a.err=me(c)),i(G(z({},a),{messageType:"reply",data:f,origin:{context:e,tabId:null},destination:a.origin,hops:[]})),c&&!k)throw f}};switch(h){case"reply":return v();case"message":return C()}}return a.hops.push(`${e}::${u}`),r(a)};return{handleMessage:i,endTransaction:a=>{const m=x.get(a);m?.reject("Transaction was ended before it could complete"),x.delete(a)},sendMessage:(a,m,p="background")=>{const h=typeof p=="string"?Z(p):p,v="Bridge#sendMessage ->";if(!h.context)throw new TypeError(`${v} Destination must be any one of known destinations`);return new Promise((C,f)=>{const c={messageID:a,data:m,destination:h,messageType:"message",transactionId:j(),origin:{context:e,tabId:null},hops:[],timestamp:Date.now()};x.set(c.transactionId,{resolve:C,reject:f});try{i(c)}catch(k){x.delete(c.transactionId),f(k)}})},onMessage:(a,m)=>(b.set(a,m),()=>b.delete(a))}},P=class{constructor(e,r){this.endpointRuntime=e,this.streamInfo=r,this.emitter=K(),this.isClosed=!1,this.handleStreamClose=()=>{this.isClosed||(this.isClosed=!0,this.emitter.emit("closed",!0),this.emitter.events={})},P.initDone||(e.onMessage("__crx_bridge_stream_transfer__",t=>{const{streamId:u,streamTransfer:x,action:b}=t.data,i=P.openStreams.get(u);i&&!i.isClosed&&(b==="transfer"&&i.emitter.emit("message",x),b==="close"&&(P.openStreams.delete(u),i.handleStreamClose()))}),P.initDone=!0),P.openStreams.set(this.streamInfo.streamId,this)}get info(){return this.streamInfo}send(e){if(this.isClosed)throw new Error("Attempting to send a message over closed stream. Use stream.onClose(<callback>) to keep an eye on stream status");this.endpointRuntime.sendMessage("__crx_bridge_stream_transfer__",{streamId:this.streamInfo.streamId,streamTransfer:e,action:"transfer"},this.streamInfo.endpoint)}close(e){e&&this.send(e),this.handleStreamClose(),this.endpointRuntime.sendMessage("__crx_bridge_stream_transfer__",{streamId:this.streamInfo.streamId,streamTransfer:null,action:"close"},this.streamInfo.endpoint)}onMessage(e){return this.getDisposable("message",e)}onClose(e){return this.getDisposable("closed",e)}getDisposable(e,r){const t=this.emitter.on(e,r);return Object.assign(t,{dispose:t,close:t})}},$=P;$.initDone=!1;$.openStreams=new Map;var he=e=>{const r=new Map,t=new Map,u=K();e.onMessage("__crx_bridge_stream_open__",i=>new Promise(a=>{const{sender:m,data:p}=i,{channel:h}=p;let v=!1,C=()=>{};const f=()=>{const c=t.get(h);typeof c=="function"?(c(new $(e,G(z({},p),{endpoint:m}))),v&&C(),a(!0)):v||(v=!0,C=u.on("did-change-stream-callbacks",f))};f()}));async function x(i,a){if(r.has(i))throw new Error("webext-bridge: A Stream is already open at this channel");const m=typeof a=="string"?Z(a):a,p={streamId:j(),channel:i,endpoint:m},h=new $(e,p);return h.onClose(()=>r.delete(i)),await e.sendMessage("__crx_bridge_stream_open__",p,m),r.set(i,h),h}function b(i,a){if(t.has(i))throw new Error("webext-bridge: This channel has already been claimed. Stream allows only one-on-one communication");t.set(i,a),u.emit("did-change-stream-callbacks")}return{openStream:x,onOpenStreamChannel:b}};export{fe as P,z as _,de as a,xe as b,ce as c,be as d,Ae as e,he as f,ue as g,pe as h,G as i,Z as p};
